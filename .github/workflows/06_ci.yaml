## I am working on it not yet but it will be done soon.
name: ðŸŒŸ CI
run-name: ðŸŒŸForloop - Slack notification

on: 
  push:

jobs:
  initialize:
    runs-on: ubuntu-latest
    outputs:
      bundle_id: ${{ steps.get_bundleid.outputs.bundle_id }}
    steps:
    - name: get bundleid
      run: |
          echo '{"bundle_id": "xxx"}' > props.json
          jq -r '.bundle_id' > bundle_id
          echo "bundle_id=$(cat bundle_id)" >> $GITHUB_OUTPUT
      id: get_bundleid
     # run: echo "bundle_id=$(cat bundle_id)" >> $GITHUB_OUTPUT
 
  build-rocky:
    needs: initialize
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      BUNDLE_ID: ${{needs.initialize.outputs.bundle_id}}
    steps:
    - name: build-rocky with initialize
      run:  |
        echo "initialize bundle_id=$BUNDLE_ID"
  
  # build-debian:
  #   needs: initialize
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 10
  #   env:
  #     BUNDLE_ID: ${{needs.initialize.outputs.bundle_id}}
  #     PLATFORM: debian
  #   steps:
  #     - uses: actions/checkout@v4
  #     - run: echo "bundle_id=$BUNDLE_ID" >> $GITHUB_ENV
    
  # docker-wgo-core:
  #   needs: [initialize, build-rocky]
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 10
  #   env:
  #     BUNDLE_ID: ${{needs.initialize.outputs.bundle_id}}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       run: echo "bundle_id=$BUNDLE_ID" >> $GITHUB_ENV

  # docker-wgo-core-hybrid:
  #   needs: [initialize, build-rocky]
  #   runs-on: github-8vcpu-ubuntu-2204
  #   timeout-minutes: 10
  #   env:
  #     BUNDLE_ID: ${{needs.initialize.outputs.bundle_id}}
      
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       run: echo "bundle_id=$BUNDLE_ID" >> $GITHUB_ENV
  
  # docker-core-manager:
  #   needs: [initialize, build-rocky]
  #   runs-on: github-8vcpu-ubuntu-2204
  #   timeout-minutes: 10
  #   env:
  #     BUNDLE_ID: ${{needs.initialize.outputs.bundle_id}}
      
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       run: echo "bundle_id=$BUNDLE_ID" >> $GITHUB_ENV
  
  # docker-wgo-core-modsec:
  #   needs: [initialize, build-rocky]
  #   runs-on: github-8vcpu-ubuntu-2204
  #   timeout-minutes: 10
  #   env:
  #     BUNDLE_ID: ${{needs.initialize.outputs.bundle_id}}
      
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       run: echo "bundle_id=$BUNDLE_ID" >> $GITHUB_ENV

  # docker-wgo-core-hybrid-modsec:
  #   needs: [initialize, build-rocky]
  #   runs-on: github-8vcpu-ubuntu-2204
  #   timeout-minutes: 10
  #   env:
  #     BUNDLE_ID: ${{needs.initialize.outputs.bundle_id}}
      
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       run: echo "bundle_id=$BUNDLE_ID" >> $GITHUB_ENV
